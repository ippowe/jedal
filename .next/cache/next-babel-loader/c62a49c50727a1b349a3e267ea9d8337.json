{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  id: 1,\n  desc: \"운동 하기\",\n  completed: false\n}, {\n  id: 2,\n  desc: \"제철달력 만들기\",\n  completed: false\n}];\nlet nextTodoId = initialState.length + 1;\nconst note = createSlice({\n  name: \"note\",\n  initialState,\n  reducers: {\n    addNote: {\n      reducer(state, action) {\n        const {\n          id,\n          desc,\n          completed\n        } = action.payload;\n        state.push({\n          id: id,\n          desc: desc,\n          completed\n        });\n      },\n\n      prepare(desc) {\n        console.log(nextTodoId, initialState.length);\n        return {\n          payload: {\n            id: nextTodoId++,\n            desc,\n            completed: false\n          }\n        };\n      }\n\n    },\n\n    toggleNote(state, action) {\n      console.log(action);\n      const todo = state.find(todo => todo.id === action.payload);\n\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    }\n\n  }\n});\nexport const {\n  addNote,\n  toggleNote\n} = note.actions;\nexport default note;","map":{"version":3,"sources":["/Users/hans/dev/jedal/modules/note.ts"],"names":["createSlice","initialState","id","desc","completed","nextTodoId","length","note","name","reducers","addNote","reducer","state","action","payload","push","prepare","console","log","toggleNote","todo","find","actions"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAQA,MAAMC,YAA0B,GAAG,CAAC;AAClCC,EAAAA,EAAE,EAAE,CAD8B;AAElCC,EAAAA,IAAI,EAAE,OAF4B;AAGlCC,EAAAA,SAAS,EAAE;AAHuB,CAAD,EAIhC;AACDF,EAAAA,EAAE,EAAE,CADH;AAEDC,EAAAA,IAAI,EAAE,UAFL;AAGDC,EAAAA,SAAS,EAAE;AAHV,CAJgC,CAAnC;AAUA,IAAIC,UAAU,GAAGJ,YAAY,CAACK,MAAb,GAAsB,CAAvC;AAEA,MAAMC,IAAI,GAAGP,WAAW,CAAC;AACvBQ,EAAAA,IAAI,EAAE,MADiB;AAEvBP,EAAAA,YAFuB;AAGvBQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAA2C;AAChD,cAAM;AAAEX,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA;AAAZ,YAA0BS,MAAM,CAACC,OAAvC;AACAF,QAAAA,KAAK,CAACG,IAAN,CAAW;AAAEb,UAAAA,EAAE,EAAEA,EAAN;AAAUC,UAAAA,IAAI,EAAEA,IAAhB;AAAsBC,UAAAA;AAAtB,SAAX;AACD,OAJM;;AAKPY,MAAAA,OAAO,CAACb,IAAD,EAAe;AACpBc,QAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ,EAAwBJ,YAAY,CAACK,MAArC;AACA,eAAO;AAAEQ,UAAAA,OAAO,EAAE;AAAEZ,YAAAA,EAAE,EAAEG,UAAU,EAAhB;AAAoBF,YAAAA,IAApB;AAA0BC,YAAAA,SAAS,EAAE;AAArC;AAAX,SAAP;AACD;;AARM,KADD;;AAWRe,IAAAA,UAAU,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACxBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,YAAMO,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAAClB,EAAL,KAAYW,MAAM,CAACC,OAAtC,CAAb;;AACA,UAAIM,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAAChB,SAAL,GAAiB,CAACgB,IAAI,CAAChB,SAAvB;AACD;AACF;;AAjBO;AAHa,CAAD,CAAxB;AAwBA,OAAO,MAAM;AAAEM,EAAAA,OAAF;AAAWS,EAAAA;AAAX,IAA0BZ,IAAI,CAACe,OAArC;AAEP,eAAef,IAAf","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface INoteState {\n  id: number;\n  desc: string;\n  completed: boolean;\n}\n\nconst initialState: INoteState[] = [{\n  id: 1,\n  desc: \"운동 하기\",\n  completed: false\n}, {\n  id: 2,\n  desc: \"제철달력 만들기\",\n  completed: false\n}];\n\nlet nextTodoId = initialState.length + 1;\n\nconst note = createSlice({\n  name: \"note\",\n  initialState,\n  reducers: {\n    addNote: {\n      reducer(state, action: PayloadAction<INoteState>) {\n        const { id, desc, completed } = action.payload;\n        state.push({ id: id, desc: desc, completed });\n      },\n      prepare(desc: string) {\n        console.log(nextTodoId, initialState.length);\n        return { payload: { id: nextTodoId++, desc, completed: false } };\n      }\n    },\n    toggleNote(state, action) {\n      console.log(action);\n      const todo = state.find(todo => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    }\n  }\n});\n\nexport const { addNote, toggleNote } = note.actions;\n\nexport default note;\n"]},"metadata":{},"sourceType":"module"}